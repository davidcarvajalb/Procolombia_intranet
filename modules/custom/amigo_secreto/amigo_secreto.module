<?php

//define('PROFILE_QUESTIONS', variable_get('amigo_secreto_profiles_questions',''));

/**
 * Implements hook_menu().
 */
function amigo_secreto_menu() {
  $items = array();
  $items['amigo-secreto-register-gamers'] = array(
    'title' => 'Amigo Secreto Resgitro Jugadores',
    'page callback' => '_amigo_secreto_page_register_gamers',
    'access arguments' => array('birthday'),
  );
  $items['amigo-secreto/carga-participante'] = array(
    'title' => 'Amigo Secreto Carga participantes',
    'page callback' => '_amigo_secreto_load_gamers',
    'access arguments' => array('birthday'),
  );
  $items['amigo-secreto/do-question'] = array(
    'title' => 'Amigo Secreto Hacer Preguntas',
    'page callback' => '_amigo_secreto_do_question',
    'access arguments' => array('birthday'),
  );
  $items['amigo-secreto/discard-users'] = array(
    'title' => 'Amigo Secreto Descartar',
    'page callback' => '_amigo_secreto_discard_user',
    'access arguments' => array('birthday'),
  );
  $items['amigo-secreto/create-p-solution'] = array(
    'title' => 'Amigo Secreto create solution',
    'page callback' => '_amigo_secreto_create_machine_answer',
    'access arguments' => array('birthday'),
  );
  $items['amigo-secreto/register-game-options'] = array(
    'title' => 'Amigo Secreto registrando opciones',
    'page callback' => '_amigo_secreto_register_game_options',
    'access arguments' => array('birthday'),
  );
  return $items;
}
/**
 * Implements hook_init().
 */
function amigo_secreto_init() {
  /*
   *drupal_add_css(drupal_get_path('module', 'book') . '/book.css');
   */
  if (arg(1) == 5806) {
    # code...
    drupal_add_css(drupal_get_path('module', 'amigo_secreto') . '/css/amigo_secreto.css');
    drupal_add_css(drupal_get_path('module', 'amigo_secreto') . '/css/amigo_secreto_aux.css');
    drupal_add_js(drupal_get_path('module', 'amigo_secreto') . '/js/amigo_secreto.js');
    _amigo_secreto_load_profile_questions();
    /*Hacemos accesible la data al js*/
    global $user;
    $own_uid = $user->uid;
    $preguntas_amigo = variable_get('amigo_secreto_profiles_questions');
    $json_questions = drupal_json_encode($preguntas_amigo);
    //$json_questions = json_encode($preguntas_amigo);
    drupal_add_js(array('amigo_secreto_questions' => $json_questions), 'setting');
    /*Validacion de usuario*/
    $user_control = variable_get('amigo_secreto_registered_user_control' . $own_uid);
    if (isset($user_control)) {
      if ($user_control == 'registrado') {
        drupal_add_js(array('amigo_secreto_registered_user' => 'registrado'), 'setting');
      }
    }
  }
}
/**
 * Implements hook_block_info().
 */
function amigo_secreto_block_info() {
  $blocks['amigo_secreto_perfil'] = array(
    'info' => t('Perfil Amigo Secreto'),
    'cache' => DRUPAL_NO_CACHE
  );
  $blocks['amigo_secreto_game'] = array(
    'info' => t('Nueva Partida Amigo Secreto'),
    'cache' => DRUPAL_NO_CACHE
  );
  $blocks['quicktab_amigo_secreto'] = array(
    'cache' => DRUPAL_NO_CACHE
  );
  return $blocks;
}
/**
 * Implements hook_block_view().
 */
function amigo_secreto_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'amigo_secreto_perfil':
      $block['subject'] = t('Perfil usuario aplicacion amigo secreto');
      $block['content'] = '<div class="p-profile-title">COMPLETA LA INFORMACIÓN QUE HACE FALTA</div>';
      $block['content'] .= '<div class="p-profile-title p-second">Responde las siguientes preguntas con la foto de tu perfil para poder participar.</div>';
      $block['content'] .= _amigo_secreto_block_perfil_content();
      break;
    case 'amigo_secreto_game':
      $block['subject'] = t('Nueva Partida Amigo Secreto');
      $block['content'] = _amigo_secreto_block_nueva_partida_content();
      break;

  }
  return $block;
}
/*Contenido del bloque que renderiza la información de un perfil*/
function _amigo_secreto_block_perfil_content(){
  //get the current user
  global $user;
  $account = user_load($user->uid);
  //Build the form
  $form_id = 'user_profile_form';
  //$form_id = 'edit_profile_user_profile_form';
  $form_state = array();
  //passing arguments to form.
  $form_state['build_info']['args'] = array($account, 'account');
  $form_state['build_info']['args'][1] = 'main';
  form_load_include($form_state, 'inc', 'user', 'user.pages');
  $form = drupal_build_form($form_id, $form_state);
  /*Second Form*/
  $form_state_2 = array();
  $form_state_2['build_info']['args'] = array($account, 'account');
  form_load_include($form_state_2, 'inc', 'user', 'user.pages');
  $form2 = drupal_build_form($form_id, $form_state_2);
  /*End of second Form*/
  //$form = drupal_get_form('user_profile_form');
  $renderable_array = array();
  //$renderable_array[] = $form2;
  $renderable_array['form-pic'][0] = $form2['picture'];
  $renderable_array['form-first'][1] = $form2['field_user_firstname'];
  $renderable_array['form-first'][2] = $form2['field_user_lastname'];
  $renderable_array['form-second'][0] = $form;

  return drupal_render($renderable_array);
}
/*Funcion que retorna el contenido de una nueva partida y la girlla de opciones*/
function _amigo_secreto_block_nueva_partida_content(){
  /*Obtenemos un bloque generado por la vista Grilla General Amigo Secreto*/
  $block = module_invoke('views', 'block_view', '2c366929a7582f1b07c4f0e08fcb3653');
  //dpm($block);
  //var_dump($block);
  //$block = block_load('views', 'block_grid_secret_friend');
  $content = '<div class="p-game-controls">';
  $content .= render(drupal_get_form('amigo_secreto_form'));
  $content .= '</div><div class="p-view-gamers">';
  $content .= drupal_render($block);
  $content .= '<div>';
  return $content;
}
/*Formulario con los campos necesarios para el Juego*/
function amigo_secreto_form($form, &$form_state) {
  /*Validamos archivo de foto*/
  global $user;
  if (is_numeric($user->picture)) {
    $user->picture = file_load($user->picture);
  }
  if (!empty($user->picture->uri)) {
    $filepath = $user->picture->uri;
  }
  $form['user'] = array();
  $form['machine'] = array();
  $form['user']['image'] = array(
    '#title' => t('Imagen'),
    '#prefix' => '<div class="user_image"><span>Tú</span>',
    //'#theme' => theme('image_style', array('style_name' => 'image_secret_friend', 'path' => $filepath)),
    '#theme' => 'image_style',
    '#style_name' => 'image_secret_friend',
    '#path' => $filepath,
    '#account' => $GLOBALS['user'],
    '#suffix' => '</div>',
  );
  $form['actions'] = array();
  /*$form['actions']['pregunta'] = array(
    '#prefix' => '<div class="p_action_wrapper">',
    '#type' => 'submit',
    '#value' => t('Pregunta'),
  );
  $form['actions']['resolver'] = array(
    '#type' => 'submit',
    '#value' => t('Resolver'),
  );*/
  $form['actions']['empezar'] = array(
    '#prefix' => '<div class="p_action_wrapper">',
    '#type' => 'submit',
    '#value' => t('Empezar'),
    '#suffix' => '</div>',
  );
  /*$form['machine']['timer'] = array(
    '#title' => t('Timer'),
    '#prefix' => '<div class="user_timer">',
    '#suffix' => '</div>',
  );*/
  $form['user']['questions'] = array(
    '#title' => t('Preguntas'),
    '#prefix' => '<div class="user_questions"><ul>',
    '#suffix' => '</ul></div>',
  );
  /*$form['user']['resolve'] = array(
    '#title' => t('Resolver'),
    '#prefix' => '<div class="user_resolve"><ul>',
    '#suffix' => '</ul></div>',
  );*/
  $form['user']['answer'] = array(
    '#title' => t('Resolver'),
    '#prefix' => '<div class="user_answer">',
    '#suffix' => '</div>',
  );
  $form['system']['answer'] = array(
    '#title' => t('Imagen'),
    '#prefix' => '<div class="system_answer"><span>HAZ CLIC SOBRE LA FOTO DE QUIEN CREES ES TU AMIGO SECRETO.</span>',
    '#suffix' => '</div>',
  );
  /*Nuevos Campos Nueva funcionalidad*/
  $form['system']['adivina'] = array(
    '#title' => t('Adivina'),
    '#prefix' => '<div class="system_adivina"><span>ADIVINAR</span>',
    '#suffix' => '</div>',
  );
  $form['system']['next_question'] = array(
    '#title' => t('Siguiente'),
    '#prefix' => '<div class="system_next_question"><span>SIGUIENTE PREGUNTA</span>',
    '#suffix' => '</div>',
  );
  $form['system']['colorbox'] = array(
    '#title' => t('Colorbox'),
    '#prefix' => '<div class="colorbox-a-wrapper"><a class="colorbox-inline" href="?width=620&height=460&inline=true#p-machine-solution"></a>',
    '#suffix' => '</div>',
  );
  $form['system']['solution'] = array(
    '#title' => t('Solution'),
    '#prefix' => '<div class="system_p_solution">',
    '#suffix' => '</div>',
  );
  /*Fin nuevos campos*/
  $form['machine']['answer'] = array(
    '#title' => t('Imagen'),
    '#prefix' => '<div class="machine_answer">',
    '#suffix' => '</div>',
  );
  $form['machine']['image'] = array(
    '#title' => t('Imagen'),
    '#prefix' => '<div class="machine_image"><span>Tu Amigo</span>',
    '#suffix' => '</div>',
  );
  return $form;
}
function amigo_test_func(){
  return 3;
}
/*Funcion para guardar las preguntas del perfil*/
function _amigo_secreto_load_profile_questions(){
  /*global $user;
  $account = user_load($user->uid);*/
  $preguntas_amigo = array();
  $preguntas_amigo['field_eres_hombre_profile'] = '¿Eres hombre?';
  $preguntas_amigo['field_pelo_oscuro'] = '¿Tienes el pelo oscuro?';
  $preguntas_amigo['field_piel_clara_profile'] = '¿Tienes piel clara?';
  $preguntas_amigo['field_gafas_profile'] = '¿Usas gafas?';
  $preguntas_amigo['field_pelo_largo_profile'] = '¿Tienes el pelo largo?';
  $preguntas_amigo['field_barba_profile'] = '¿Tienes barba y/o bigote?';
  $preguntas_amigo['field_ojos_claros_profile'] = '¿Tienes ojos claros?';
  $preguntas_amigo['field_mayor_treinta_profile'] = '¿Eres mayor de 30 años?';
  variable_set('amigo_secreto_profiles_questions', $preguntas_amigo);
}
/*
* Respuesta de la solicitud de registro de los jugadores
*/
function _amigo_secreto_page_register_gamers(){
  global $user;
  $own_uid = $user->uid;
  /*Comentado por nueva funcionalidad*/
  /*if(isset($_GET["user_gamer_id"])){
    $user_gamer = $_GET["user_gamer_id"];
    variable_set('amigo_user_gamer_id' . $own_uid, $user_gamer);
  }*/
  if(isset($_GET["machine_gamer_id"])){
    $machine_gamer = $_GET["machine_gamer_id"];
    variable_set('amigo_machine_gamer_id' . $own_uid, $machine_gamer);
    //$machine_user_solution = _amigo_secreto_create_machine_answer($machine_gamer);
    print($machine_user_solution);
  }
  return true;
}
/*
* Funcion que crea la respuesta para el usuario rival
*/
function _amigo_secreto_create_machine_answer($machine_gamer){
  global $user;
  $own_uid = $user->uid;
  $machine_gamer = variable_get('amigo_machine_gamer_id' . $own_uid);
  $machine_gamer_profile = profile2_load_by_user($machine_gamer);
  $machine_gamer_user_data = user_load($machine_gamer);
  $machine_gamer_name = $machine_gamer_user_data->field_user_firstname ['und'][0]['value'] . ' ' . $machine_gamer_user_data->field_user_lastname ['und'][0]['value'];
  $machine_gamer_free_time = $machine_gamer_profile['main']->field_tiempo_libre_profile['und'][0]['value'];
  $machine_gamer_future = $machine_gamer_profile['main']->field_proyeccion_futuro_profile['und'][0]['value'];
  $machine_gamer_sueno = $machine_gamer_profile['main']->field_sueno_profile['und'][0]['value'];
  $machine_gamer_sobre_ti = $machine_gamer_profile['main']->field_sobre_ti_profile['und'][0]['value'];
  $solution_machine = '';
  $solution_machine .= '
  <div id="p-machine-solution">
  <div class="p-header-machine-solution">
    <span class="p-status-ans">¡FELICITACIONES! ADIVINASTE SOY </span>
    <span class="p-rival-name">' . $machine_gamer_name . '</span>
  </div>
  <h3>Conoce más sobre mi</h3>
  <div class="p-profile-solve-wrapper">
    <div class="p-free-time">
      <span>¿Cómo disfrutas tu tiempo libre?:</span>
      <span class="p-question-ans">'. $machine_gamer_free_time . '</span>
    </div>
    <div class="p-imagina">
      <span>¿Cómo te imaginas en 5 años?:</span>
      <span class="p-question-ans">'. $machine_gamer_future . '</span>
    </div>
    <div class="p-dream">
      <span>¿Cuál es tu sueño por cumplir?:</span>
      <span class="p-question-ans">' . $machine_gamer_sueno . '</span>
    </div>
    <div class="p-not-know">
      <span>Cuéntanos algo sobre ti que no sepamos:</span>
      <span class="p-question-ans">' . $machine_gamer_sobre_ti . '</span>
    </div>
  </div>
  <div class="p-new-game"><a href="/institucional/amigo-secreto">NUEVA PARTIDA</a></div>
<div>';
print $solution_machine;
}
/*
* Función para dar respuesta a una pregunta referente al usuario
*/
function _amigo_secreto_do_question(){
  if(isset($_GET["question_id"])){
    $question_id = $_GET["question_id"];
    if (isset($_GET['user'])) {
      global $user;
      $own_uid = $user->uid;
      $user_turn = $_GET['user'];
      if ($user_turn == 'user') {
        $user_gamer = variable_get('amigo_machine_gamer_id' . $own_uid);
      }else{
        $user_gamer = variable_get('amigo_user_gamer_id' . $own_uid);
      }
      $account = user_load($user_gamer);
      //$account = user_load(1);
      $gamer_profile = profile2_load_by_user($account);
      if (!empty($gamer_profile)) {
        $profile_ans = $gamer_profile['main']->$question_id;
        $question_answer = '<span>' . $profile_ans['und'][0]['value'] . '</span>';
        //$question_answer = drupal_json_encode($ans_array);
        //drupal_add_js(array('amigo_secreto_question_ans' => $question_answer), 'setting');
      }
    }
  }
  print $question_answer;
  //return drupal_json_encode($ans_array);
}
/*Función para cargar nuevos jugadores*/
function _amigo_secreto_load_gamers(){
  $view = views_embed_view('grilla_general_amigo_secreto', 'block_grid_secret_friend');
  print $view;
}
/*
* Función que da respuesta si un usuario acerto o no?
*/
function _amigo_secreto_discard_user(){
  global $user;
  $own_uid = $user->uid;
  if (isset($_GET['question_id'])) {
    $question_id = $_GET['question_id'];
    $machine_gamer_id = variable_get('amigo_machine_gamer_id' . $own_uid);
    $machine_profile = profile2_load_by_user($machine_gamer_id);
    $game_options_friend = variable_get('game_options_friend' . $own_uid);
    $users_in_the_game = user_load_multiple($game_options_friend);
    /*La pregunta de la maquina*/
    $variable_maquinita = $machine_profile['main']->$question_id;
    $mi_arreglito = array();
    foreach ($users_in_the_game as $key) {
      $profile_comparission = profile2_load_by_user($key->uid);
      $mi_variablesita = $profile_comparission['main']->$question_id;
      //print(drupal_json_encode($mi_variablesita['und'][0]['value']));
      if ($mi_variablesita['und'][0]['value'] != $variable_maquinita['und'][0]['value']) {
        //print(drupal_json_encode($variable_maquinita['und'][0]['value']));
        $mi_arreglito[] = $key->uid;
      }
    }
    print(drupal_json_encode($mi_arreglito));
  }
}
/**
 * Implements hook_form_alter().
 */
function amigo_secreto_form_alter(&$form, &$form_state, $form_id) {
  /*
   *if (isset($form['type']) && $form['type']['#value'] . '_node_settings' == $form_id) {
   *  $form['workflow']['upload_' . $form['type']['#value']] = array(
   *    '#type' => 'radios',
   *    '#title' => t('Attachments'),
   *    '#default_value' => variable_get('upload_' . $form['type']['#value'], 1),
   *    '#options' => array(t('Disabled'), t('Enabled')),
   * );
   *}
   */
  if ($form_id == 'user_profile_form' && arg(1) == 5806) {
    if (isset($form_state['input']['profile_main'])) {
      global $user;
      $own_uid = $user->uid;
      variable_set('amigo_secreto_registered_user_control' . $own_uid, 'registrado');
    }
  }
}
function _amigo_secreto_not_solve_game(){
  global $user;
  $own_uid = $user->uid;
  $stored_user = variable_get('amigo_machine_gamer_id' . $own_uid);
  $stored_user_loaded = user_load($stored_user);
  $respuesta = '<div class="p-no-adivina">NO adivinaste, soy '. $stored_user_loaded->field_user_firstname['und'][0]['value']  .' '. $stored_user_loaded->field_user_lastname['und'][0]['value'] .'. Vuelve a jugar</div>';
  print $respuesta;
}
/*
* Funcion para registrar las opciones de los otros usuarios
*/
function _amigo_secreto_register_game_options(){
  global $user;
  $own_uid = $user->uid;
  if (isset($_POST['game_options'])){
    $game_options = $_POST['game_options'];
    variable_set('game_options_friend' . $own_uid, $game_options);
  }
}
